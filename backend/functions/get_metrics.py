# -*- coding: utf-8 -*-
"""Get_metrics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NgHSwE13hnjjsl_LflJgZWc-yOsXXUVG
"""

import pprint
from datetime import datetime
import requests
import json
import pandas as pd
import numpy as np
# add exception handling

def get_nearest_data(input_date, dates_list):
  cloz_dict = {
  abs(input_date.timestamp() - date.timestamp()) : date
  for date in dates_list}
  res = cloz_dict[min(cloz_dict.keys())]
  if(res>input_date):
    res = dates_list.index(res)+1
  else:
    res = dates_list.index(res)
  return res

# input date should be in any form. Make sure to correctly enter the values here 
def get_metrics():# input should be date and ticker symbol
  input_date = datetime(2023, 1, 21)
  url = "https://api-v2.intrinio.com/companies/AAPL/filings?report_type=10-K,10-Q&api_key=OjAwYjk1OWYxZGEzYWQ2Y2VjN2YyMWExY2RkMTM2Y2Uz"
  ADVANCED_STATS = requests.get(url)
  op = ADVANCED_STATS.json()
  test_list = op['filings'] 
  res = [ sub['filing_date'] for sub in test_list ]
  dates_list = [datetime.strptime(date, '%Y-%m-%d') for date in res]
  item_of_use = get_nearest_data(input_date, dates_list)
  filing_code = op['filings'][item_of_use]['id']
  url2 = "https://api-v2.intrinio.com/filings/" + filing_code + "/fundamentals?api_key=OjAwYjk1OWYxZGEzYWQ2Y2VjN2YyMWExY2RkMTM2Y2Uz"
  filin = requests.get(url2)
  op2 = filin.json()
  # fix this. I cannot assume this. 
  list_of_statements = [op2['fundamentals'][0]['id'], op2['fundamentals'][3]['id'], op2['fundamentals'][5]['id']]
  tags = []
  value = []
  for i in list_of_statements:
    url3 = "https://api-v2.intrinio.com/fundamentals/" + i + "/standardized_financials?api_key=OjAwYjk1OWYxZGEzYWQ2Y2VjN2YyMWExY2RkMTM2Y2Uz"
    filin = requests.get(url3)
    op3 = filin.json()
    l = len(op3['standardized_financials'])
    for j in range(l): 
      temp = op3['standardized_financials'][j]['data_tag'] # these are sets of 3. But i need to visit each one of them and extract
      temp2 = op3['standardized_financials'][j]['value']
      tags.append(temp['tag'])
      value.append(temp2)
   #create df 
  return pd.DataFrame([value], columns = tags)

df = get_metrics()
# once i have op I need to check if all these statements are available. Only then can I call for them.

